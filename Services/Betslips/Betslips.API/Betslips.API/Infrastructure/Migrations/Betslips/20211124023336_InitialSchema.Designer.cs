// <auto-generated />
using System;
using BettingApp.Services.Betslips.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BettingApp.Services.Betslips.API.Infrastructure.Migrations.Betslips
{
    [DbContext(typeof(BetslipsContext))]
    [Migration("20211124023336_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Betslip", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GamblerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsBetable")
                        .HasColumnType("bit")
                        .HasColumnName("IsBetable");

                    b.Property<decimal>("PotentialProfit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PotentialProfit");

                    b.Property<decimal>("PotentialWinnings")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PotentialWinnings");

                    b.Property<decimal>("TotalOdd")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TotalOdd");

                    b.Property<decimal>("WageredAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("WageredAmount");

                    b.HasKey("Id");

                    b.HasAlternateKey("GamblerId");

                    b.ToTable("betslips", "betslips");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Match", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AwayClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AwayClubName");

                    b.Property<int>("AwayClubScore")
                        .HasColumnType("int")
                        .HasColumnName("AwayClubScore");

                    b.Property<string>("CurrentMinute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CurrentMinute");

                    b.Property<string>("HomeClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HomeClubName");

                    b.Property<int>("HomeClubScore")
                        .HasColumnType("int")
                        .HasColumnName("HomeClubScore");

                    b.Property<bool>("IsBetable")
                        .HasColumnType("bit")
                        .HasColumnName("IsBetable");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit")
                        .HasColumnName("IsCanceled");

                    b.Property<DateTime>("KickoffDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("KickoffDateTime");

                    b.Property<string>("RelatedMatchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RelatedMatchId");

                    b.Property<string>("SelectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SelectionId");

                    b.HasKey("Id");

                    b.HasIndex("SelectionId")
                        .IsUnique();

                    b.ToTable("matches", "betslips");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.MatchResult", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("AliasName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("matchResult", "betslips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AliasName = "1",
                            Name = "winnerhomeclub",
                            TypeId = 1,
                            TypeName = "winner"
                        },
                        new
                        {
                            Id = 2,
                            AliasName = "X",
                            Name = "winnerdraw",
                            TypeId = 1,
                            TypeName = "winner"
                        },
                        new
                        {
                            Id = 3,
                            AliasName = "2",
                            Name = "winnerawayclub",
                            TypeId = 1,
                            TypeName = "winner"
                        },
                        new
                        {
                            Id = 4,
                            AliasName = "Under",
                            Name = "goalsunder",
                            TypeId = 2,
                            TypeName = "goals"
                        },
                        new
                        {
                            Id = 5,
                            AliasName = "Over",
                            Name = "goalsover",
                            TypeId = 2,
                            TypeName = "goals"
                        });
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Requirement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsFulfilled")
                        .HasColumnType("bit")
                        .HasColumnName("IsFulfilled");

                    b.Property<string>("RelatedMatchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RelatedMatchId");

                    b.Property<decimal>("RequiredValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RequiredValue");

                    b.Property<int>("RequirementTypeId")
                        .HasColumnType("int")
                        .HasColumnName("RequirementTypeId");

                    b.Property<string>("RequirementTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RequirementTypeName");

                    b.Property<string>("SelectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("SelectionId");

                    b.Property<int>("SelectionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SelectionTypeId");

                    b.HasKey("Id");

                    b.HasIndex("RequirementTypeId");

                    b.HasIndex("SelectionId")
                        .IsUnique();

                    b.ToTable("requirements", "betslips");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.RequirementType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("AliasName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("requirementType", "betslips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AliasName = "No Req",
                            Name = "norequirement"
                        },
                        new
                        {
                            Id = 2,
                            AliasName = "Min Sel",
                            Name = "minimumselections"
                        },
                        new
                        {
                            Id = 3,
                            AliasName = "Min Wag",
                            Name = "minimumwageredamount"
                        },
                        new
                        {
                            Id = 4,
                            AliasName = "Max Sel",
                            Name = "maximumselections"
                        },
                        new
                        {
                            Id = 5,
                            AliasName = "Max Wag",
                            Name = "maximumwageredamount"
                        });
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Selection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BetslipId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("BetslipId");

                    b.Property<int>("GamblerMatchResultId")
                        .HasColumnType("int")
                        .HasColumnName("GamblerMatchResultId");

                    b.Property<string>("GamblerMatchResultName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GamblerMatchResultName");

                    b.Property<bool>("IsBetable")
                        .HasColumnType("bit")
                        .HasColumnName("IsBetable");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit")
                        .HasColumnName("IsCanceled");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("bit")
                        .HasColumnName("IsDisabled");

                    b.Property<decimal>("Odd")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Odd");

                    b.Property<int>("SelectionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SelectionTypeId");

                    b.Property<string>("SelectionTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SelectionTypeName");

                    b.HasKey("Id");

                    b.HasIndex("BetslipId");

                    b.HasIndex("GamblerMatchResultId");

                    b.ToTable("selections", "betslips");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.WalletAggregate.Wallet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Balance");

                    b.Property<string>("GamblerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GamblerId");

                    b.Property<DateTime>("LastTimeUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastTimeUpdated");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PreviousBalance");

                    b.HasKey("Id");

                    b.ToTable("wallets", "betslips");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Infrastructure.Idempotency.ClientRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("requests", "betslips");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Match", b =>
                {
                    b.HasOne("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Selection", null)
                        .WithOne("Match")
                        .HasForeignKey("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Match", "SelectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Requirement", b =>
                {
                    b.HasOne("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.RequirementType", "RequirementType")
                        .WithMany()
                        .HasForeignKey("RequirementTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Selection", null)
                        .WithOne("Requirement")
                        .HasForeignKey("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Requirement", "SelectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequirementType");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Selection", b =>
                {
                    b.HasOne("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Betslip", null)
                        .WithMany("Selections")
                        .HasForeignKey("BetslipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.MatchResult", "GamblerMatchResult")
                        .WithMany()
                        .HasForeignKey("GamblerMatchResultId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GamblerMatchResult");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Betslip", b =>
                {
                    b.Navigation("Selections");
                });

            modelBuilder.Entity("BettingApp.Services.Betslips.Domain.AggregatesModel.BetslipAggregate.Selection", b =>
                {
                    b.Navigation("Match");

                    b.Navigation("Requirement");
                });
#pragma warning restore 612, 618
        }
    }
}
